{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{617:function(s,t,e){\"use strict\";e.r(t);var a=e(6),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"redis-哨兵模式\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redis-哨兵模式\"}},[s._v(\"#\")]),s._v(\" Redis 哨兵模式\")]),s._v(\" \"),e(\"blockquote\",[e(\"p\",[s._v(\"我们知道 Reids 提供了主从集群的机制，来保证可用性，可是如果主库发生故障了，那就直接会影响到从库的同步，怎么办呢？\")]),s._v(\" \"),e(\"p\",[s._v(\"所以，如果主库挂了，我们就需要运行一个新主库，比如说把一个从库切换为主库，把它当成主库。这就涉及到三个问题：\")]),s._v(\" \"),e(\"ol\",[e(\"li\",[s._v(\"主库真的挂了吗？\")]),s._v(\" \"),e(\"li\",[s._v(\"该选择哪个从库作为主库？\")]),s._v(\" \"),e(\"li\",[s._v(\"怎么把新主库的相关信息通知给从库和客户端呢？\")])]),s._v(\" \"),e(\"p\",[s._v(\"围绕这 3 个问题，我们来看下 Redis 哨兵。\")])]),s._v(\" \"),e(\"h3\",{attrs:{id:\"redis-sentinel-哨兵\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redis-sentinel-哨兵\"}},[s._v(\"#\")]),s._v(\" Redis Sentinel 哨兵\")]),s._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/wmyskxz/img/img/Redis%EF%BC%889%EF%BC%89%E2%80%94%E2%80%94%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%BC%BA%E3%80%90%E9%9B%86%E7%BE%A4%E3%80%91%E5%85%A5%E9%97%A8%E5%AE%9E%E8%B7%B5%E6%95%99%E7%A8%8B/7896890-884d5be9a2ddfebc.png\",alt:\"\"}})]),s._v(\" \"),e(\"p\",[s._v(\"上图 展示了一个典型的哨兵架构图，它由两部分组成，哨兵节点和数据节点：\")]),s._v(\" \"),e(\"ul\",[e(\"li\",[e(\"strong\",[s._v(\"哨兵节点：\")]),s._v(\" 哨兵系统由一个或多个哨兵节点组成，哨兵节点是特殊的 Redis 节点，\"),e(\"mark\",[s._v(\"不存储数据\")]),s._v(\"；\")]),s._v(\" \"),e(\"li\",[e(\"strong\",[s._v(\"数据节点：\")]),s._v(\" 主节点和从节点都是数据节点；\")])]),s._v(\" \"),e(\"p\",[s._v(\"在复制的基础上，哨兵实现了 \"),e(\"strong\",[s._v(\"自动化的故障恢复\")]),s._v(\" 功能，下面是官方对于哨兵功能的描述：\")]),s._v(\" \"),e(\"ul\",[e(\"li\",[e(\"strong\",[s._v(\"监控（Monitoring）：\")]),s._v(\" 哨兵会不断地检查主节点和从节点是否运作正常。监控是指哨兵进程在运行时，周期性地给所有的主从库发送 PING 命令，检测它们是否仍然在线运行。如果从库没有在规定时间内响应哨兵的 PING 命令，哨兵就会把它标记为“下线状态”；同样，如果主库也没有在规定时间内响应哨兵的 PING 命令，哨兵就会判定主库下线，然后开始自动切换主库的流程。\")]),s._v(\" \"),e(\"li\",[e(\"strong\",[s._v(\"自动故障转移（Automatic failover）/ 选主：\")]),s._v(\" 当 \"),e(\"strong\",[s._v(\"主节点\")]),s._v(\" 不能正常工作时，哨兵会开始 \"),e(\"strong\",[s._v(\"自动故障转移操作\")]),s._v(\"，它会将失效主节点的其中一个 \"),e(\"strong\",[s._v(\"从节点升级为新的主节点\")]),s._v(\"，并让其他从节点改为复制新的主节点。\")]),s._v(\" \"),e(\"li\",[e(\"strong\",[s._v(\"配置提供者（Configuration provider）：\")]),s._v(\" 客户端在初始化时，通过连接哨兵来获得当前 Redis 服务的主节点地址。\")]),s._v(\" \"),e(\"li\",[e(\"strong\",[s._v(\"通知（Notification）：\")]),s._v(\" 在执行通知任务时，哨兵会把新主库的连接信息发给其他从库，让它们执行 replicaof 命令，和新主库建立连接，并进行数据复制。同时，哨兵会把新主库的连接信息通知给客户端，让它们把请求操作发到新主库上。\")])]),s._v(\" \"),e(\"p\",[s._v(\"其中，监控和自动故障转移功能，使得哨兵可以及时发现主节点故障并完成转移。而配置提供者和通知功能，则需要在与客户端的交互中才能体现。\")]),s._v(\" \"),e(\"h3\",{attrs:{id:\"哨兵机制的基本流程\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#哨兵机制的基本流程\"}},[s._v(\"#\")]),s._v(\" 哨兵机制的基本流程\")]),s._v(\" \"),e(\"p\",[s._v(\"在监控任务中，哨兵需要判断主库是否处于下线状态；\")]),s._v(\" \"),e(\"h4\",{attrs:{id:\"主观下线和客观下线\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#主观下线和客观下线\"}},[s._v(\"#\")]),s._v(\" 主观下线和客观下线\")]),s._v(\" \"),e(\"p\",[s._v(\"我先解释下什么是“主观下线”。\")]),s._v(\" \"),e(\"p\",[s._v(\"**哨兵进程会使用 PING 命令检测它自己和主、从库的网络连接情况，用来判断实例的状态。**如果哨兵发现主库或从库对 PING 命令的响应超时了，那么，哨兵就会先把它标记为“主观下线”。\")]),s._v(\" \"),e(\"p\",[s._v(\"如果检测的是从库，那么，哨兵简单地把它标记为“主观下线”就行了，因为从库的下线影响一般不太大，集群的对外服务不会间断。\")]),s._v(\" \"),e(\"p\",[s._v(\"但是，如果检测的是主库，那么，哨兵还不能简单地把它标记为“主观下线”，开启主从切换。因为很有可能存在这么一个情况：那就是哨兵误判了，其实主库并没有故障。可是，一旦启动了主从切换，后续的选主和通知操作都会带来额外的计算和通信开销。\")]),s._v(\" \"),e(\"p\",[s._v(\"为了避免这些不必要的开销，我们要特别注意误判的情况。\")]),s._v(\" \"),e(\"p\",[s._v(\"误判一般会发生在集群网络压力较大、网络拥塞，或者是主库本身压力较大的情况下。一旦哨兵判断主库下线了，就会开始选择新主库，并让从库和新主库进行数据同步，这个过程本身就会有开销，例如，哨兵要花时间选出新主库，从库也需要花时间和新主库同步。\")]),s._v(\" \"),e(\"p\",[s._v(\"那怎么减少误判呢？\")]),s._v(\" \"),e(\"p\",[s._v(\"在日常生活中，当我们要对一些重要的事情做判断的时候，经常会和家人或朋友一起商量一下，然后再做决定。\")]),s._v(\" \"),e(\"p\",[s._v(\"哨兵机制也是类似的，它通常会采用多实例组成的集群模式进行部署，这也被称为\"),e(\"strong\",[s._v(\"哨兵集群\")]),s._v(\"。引入多个哨兵实例一起来判断，就可以避免单个哨兵因为自身网络状况不好，而误判主库下线的情况。同时，多个哨兵的网络同时不稳定的概率较小，由它们一起做决策，误判率也能降低。\")]),s._v(\" \"),e(\"p\",[s._v(\"在判断主库是否下线时，不能由一个哨兵说了算，只有大多数的哨兵实例，都判断主库已经“主观下线”了，主库才会被标记为“\"),e(\"strong\",[s._v(\"客观下线\")]),s._v(\"”，这个叫法也是表明主库下线成为一个客观事实了。这个判断原则就是：少数服从多数。同时，这会进一步触发哨兵开始主从切换流程。\")]),s._v(\" \"),e(\"p\",[s._v(\"为了方便你理解，我再画一张图展示一下这里的逻辑。如下图所示，Redis 主从集群有一个主库、三个从库，还有三个哨兵实例。在图片的左边，哨兵 2 判断主库为“主观下线”，但哨兵 1 和 3 却判定主库是上线状态，此时，即使哨兵 3 仍然判断主库为上线状态，主库也被标记为“客观下线”了。\")]),s._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://static001.geekbang.org/resource/image/19/0d/1945703abf16ee14e2f7559873e4e60d.jpg\",alt:\"img\"}})]),s._v(\" \"),e(\"h4\",{attrs:{id:\"如何选定新主库\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#如何选定新主库\"}},[s._v(\"#\")]),s._v(\" 如何选定新主库？\")]),s._v(\" \"),e(\"p\",[s._v(\"一般来说，我把哨兵选择新主库的过程称为“筛选 + 打分”。简单来说，我们在多个从库中，先按照一定的筛选条件，把不符合条件的从库去掉。然后，我们再按照一定的规则，给剩下的从库逐个打分，将得分最高的从库选为新主库，如下图所示：\")]),s._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://static001.geekbang.org/resource/image/f2/4c/f2e9b8830db46d959daa6a39fbf4a14c.jpg\",alt:\"img\"}})]),s._v(\" \"),e(\"h3\",{attrs:{id:\"快速体验\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#快速体验\"}},[s._v(\"#\")]),s._v(\" 快速体验\")]),s._v(\" \"),e(\"h4\",{attrs:{id:\"第一步-创建主从节点配置文件并启动\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第一步-创建主从节点配置文件并启动\"}},[s._v(\"#\")]),s._v(\" 第一步：创建主从节点配置文件并启动\")]),s._v(\" \"),e(\"p\",[s._v(\"正确安装好 Redis 之后，我们去到 Redis 的安装目录 \"),e(\"em\",[s._v(\"(mac 默认在 \"),e(\"code\",[s._v(\"/usr/local/\")]),s._v(\")*，找到 \"),e(\"code\",[s._v(\"redis.conf\")]),s._v(\" 文件复制三份分别命名为 \"),e(\"code\",[s._v(\"redis-master.conf\")]),s._v(\"/\"),e(\"code\",[s._v(\"redis-slave1.conf\")]),s._v(\"/\"),e(\"code\",[s._v(\"redis-slave2.conf\")]),s._v(\"，分别作为 \"),e(\"code\",[s._v(\"1\")]),s._v(\" 个主节点和 \"),e(\"code\",[s._v(\"2\")]),s._v(\" 个从节点的配置文件 *(下图演示了我本机的 \"),e(\"code\",[s._v(\"redis.conf\")]),s._v(\" 文件的位置)\")])]),s._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/wmyskxz/img/img/Redis%EF%BC%889%EF%BC%89%E2%80%94%E2%80%94%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%BC%BA%E3%80%90%E9%9B%86%E7%BE%A4%E3%80%91%E5%85%A5%E9%97%A8%E5%AE%9E%E8%B7%B5%E6%95%99%E7%A8%8B/7896890-34de77bfca56d32e.png\",alt:\"\"}})]),s._v(\" \"),e(\"p\",[s._v(\"打开可以看到这个 \"),e(\"code\",[s._v(\".conf\")]),s._v(\" 后缀的文件里面有很多说明的内容，全部删除然后分别改成下面的样子：\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#redis-master.conf\")]),s._v(\"\\nport \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6379\")]),s._v(\"\\ndaemonize \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\nlogfile \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"6379.log\"')]),s._v(\"\\ndbfilename \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"dump-6379.rdb\"')]),s._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#redis-slave1.conf\")]),s._v(\"\\nport \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6380\")]),s._v(\"\\ndaemonize \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\nlogfile \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"6380.log\"')]),s._v(\"\\ndbfilename \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"dump-6380.rdb\"')]),s._v(\"\\nslaveof \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"127.0\")]),s._v(\".0.1 \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6379\")]),s._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#redis-slave2.conf\")]),s._v(\"\\nport \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6381\")]),s._v(\"\\ndaemonize \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\nlogfile \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"6381.log\"')]),s._v(\"\\ndbfilename \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"dump-6381.rdb\"')]),s._v(\"\\nslaveof \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"127.0\")]),s._v(\".0.1 \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6379\")]),s._v(\"\\n\")])])]),e(\"p\",[s._v(\"然后我们可以执行 \"),e(\"code\",[s._v(\"redis-server\")]),s._v(\" 来根据配置文件启动不同的 Redis 实例，依次启动主从节点：\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[s._v(\"redis-server /usr/local/redis-5.0.3/redis-master.conf\\nredis-server /usr/local/redis-5.0.3/redis-slave1.conf\\nredis-server /usr/local/redis-5.0.3/redis-slave2.conf\\n\")])])]),e(\"p\",[s._v(\"节点启动后，我们执行 \"),e(\"code\",[s._v(\"redis-cli\")]),s._v(\" 默认连接到我们端口为 \"),e(\"code\",[s._v(\"6379\")]),s._v(\" 的主节点执行 \"),e(\"code\",[s._v(\"info Replication\")]),s._v(\" 检查一下主从状态是否正常：\"),e(\"em\",[s._v(\"(可以看到下方正确地显示了两个从节点)\")])]),s._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/wmyskxz/img/img/Redis%EF%BC%889%EF%BC%89%E2%80%94%E2%80%94%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%BC%BA%E3%80%90%E9%9B%86%E7%BE%A4%E3%80%91%E5%85%A5%E9%97%A8%E5%AE%9E%E8%B7%B5%E6%95%99%E7%A8%8B/7896890-a1c935f094240cac.png\",alt:\"img\"}})]),s._v(\" \"),e(\"h4\",{attrs:{id:\"第二步-创建哨兵节点配置文件并启动\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第二步-创建哨兵节点配置文件并启动\"}},[s._v(\"#\")]),s._v(\" 第二步：创建哨兵节点配置文件并启动\")]),s._v(\" \"),e(\"p\",[s._v(\"按照上面同样的方法，我们给哨兵节点也创建三个配置文件。\"),e(\"em\",[s._v(\"(哨兵节点本质上是特殊的 Redis 节点，所以配置几乎没什么差别，只是在端口上做区分就好)\")])]),s._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# redis-sentinel-1.conf\")]),s._v(\"\\nport \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"26379\")]),s._v(\"\\ndaemonize \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\nlogfile \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"26379.log\"')]),s._v(\"\\nsentinel monitor mymaster \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"127.0\")]),s._v(\".0.1 \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6379\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# redis-sentinel-2.conf\")]),s._v(\"\\nport \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"26380\")]),s._v(\"\\ndaemonize \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\nlogfile \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"26380.log\"')]),s._v(\"\\nsentinel monitor mymaster \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"127.0\")]),s._v(\".0.1 \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6379\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# redis-sentinel-3.conf\")]),s._v(\"\\nport \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"26381\")]),s._v(\"\\ndaemonize \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\nlogfile \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"26381.log\"')]),s._v(\"\\nsentinel monitor mymaster \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"127.0\")]),s._v(\".0.1 \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6379\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"\\n\")])])]),e(\"p\",[s._v(\"其中，\"),e(\"code\",[s._v(\"sentinel monitor mymaster 127.0.0.1 6379 2\")]),s._v(\" 配置的含义是：该哨兵节点监控 \"),e(\"code\",[s._v(\"127.0.0.1:6379\")]),s._v(\" 这个主节点，该主节点的名称是 \"),e(\"code\",[s._v(\"mymaster\")]),s._v(\"，最后的 \"),e(\"code\",[s._v(\"2\")]),s._v(\" 的含义与主节点的故障判定有关：至少需要 \"),e(\"code\",[s._v(\"2\")]),s._v(\" 个哨兵节点同意，才能判定主节点故障并进行故障转移。\")]),s._v(\" \"),e(\"p\",[s._v(\"执行下方命令将哨兵节点启动起来：\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[s._v(\"redis-server /usr/local/redis-5.0.3/redis-sentinel-1.conf --sentinel\\nredis-server /usr/local/redis-5.0.3/redis-sentinel-2.conf --sentinel\\nredis-server /usr/local/redis-5.0.3/redis-sentinel-3.conf --sentinel\\n\")])])]),e(\"p\",[s._v(\"使用 \"),e(\"code\",[s._v(\"redis-cil\")]),s._v(\" 工具连接哨兵节点，并执行 \"),e(\"code\",[s._v(\"info Sentinel\")]),s._v(\" 命令来查看是否已经在监视主节点了：\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 连接端口为 26379 的 Redis 节点\")]),s._v(\"\\n➜  ~ redis-cli -p \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"26379\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"127.0\")]),s._v(\".0.1:2637\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[s._v(\"9\")]),s._v(\">\")]),s._v(\" info Sentinel\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# Sentinel\")]),s._v(\"\\nsentinel_masters:1\\nsentinel_tilt:0\\nsentinel_running_scripts:0\\nsentinel_scripts_queue_length:0\\nsentinel_simulate_failure_flags:0\\nmaster0:name\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\"mymaster,status\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\"ok,address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"127.0\")]),s._v(\".0.1:6379,slaves\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\",sentinels\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\"\\n\")])])]),e(\"p\",[s._v(\"此时你打开刚才写好的哨兵配置文件，你还会发现出现了一些变化：\")]),s._v(\" \"),e(\"h4\",{attrs:{id:\"第三步-演示故障转移\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第三步-演示故障转移\"}},[s._v(\"#\")]),s._v(\" 第三步：演示故障转移\")]),s._v(\" \"),e(\"p\",[s._v(\"首先，我们使用 \"),e(\"code\",[s._v(\"kill -9\")]),s._v(\" 命令来杀掉主节点，\"),e(\"strong\",[s._v(\"同时\")]),s._v(\" 在哨兵节点中执行 \"),e(\"code\",[s._v(\"info Sentinel\")]),s._v(\" 命令来观察故障节点的过程：\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[s._v(\"➜  ~ \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"ps\")]),s._v(\" aux \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"grep\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6379\")]),s._v(\"\\nlongtao          \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"74529\")]),s._v(\"   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.3\")]),s._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.0\")]),s._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4346936\")]),s._v(\"   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2132\")]),s._v(\"   ??  Ss   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),s._v(\":30上午   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\":03.09 redis-server *:26379 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"sentinel\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\nlongtao          \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"73541\")]),s._v(\"   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.2\")]),s._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.0\")]),s._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4348072\")]),s._v(\"   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2292\")]),s._v(\"   ??  Ss   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),s._v(\":18上午   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\":04.79 redis-server *:6379\\nlongtao          \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"75521\")]),s._v(\"   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.0\")]),s._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.0\")]),s._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4286728\")]),s._v(\"    \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"728\")]),s._v(\" s008  S+   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),s._v(\":39上午   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\":00.00 \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"grep\")]),s._v(\" --color\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\"auto --exclude-dir\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\".bzr --exclude-dir\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\"CVS --exclude-dir\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\".git --exclude-dir\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\".hg --exclude-dir\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\".svn \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6379\")]),s._v(\"\\nlongtao          \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"74836\")]),s._v(\"   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.0\")]),s._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.0\")]),s._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4289844\")]),s._v(\"    \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"944\")]),s._v(\" s006  S+   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),s._v(\":32上午   \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\":00.01 redis-cli -p \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"26379\")]),s._v(\"\\n➜  ~ \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"kill\")]),s._v(\" -9 \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"73541\")]),s._v(\"\\n\")])])]),e(\"p\",[s._v(\"如果 \"),e(\"strong\",[s._v(\"刚杀掉瞬间\")]),s._v(\" 在哨兵节点中执行 \"),e(\"code\",[s._v(\"info\")]),s._v(\" 命令来查看，会发现主节点还没有切换过来，因为哨兵发现主节点故障并转移需要一段时间：\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 第一时间查看哨兵节点发现并未转移，还在 6379 端口\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"127.0\")]),s._v(\".0.1:2637\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[s._v(\"9\")]),s._v(\">\")]),s._v(\" info Sentinel\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# Sentinel\")]),s._v(\"\\nsentinel_masters:1\\nsentinel_tilt:0\\nsentinel_running_scripts:0\\nsentinel_scripts_queue_length:0\\nsentinel_simulate_failure_flags:0\\nmaster0:name\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\"mymaster,status\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\"ok,address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"127.0\")]),s._v(\".0.1:6379,slaves\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\",sentinels\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\"\\n\")])])]),e(\"p\",[s._v(\"一段时间之后你再执行 \"),e(\"code\",[s._v(\"info\")]),s._v(\" 命令，查看，你就会发现主节点已经切换成了 \"),e(\"code\",[s._v(\"6381\")]),s._v(\" 端口的从节点：\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 过一段时间之后在执行，发现已经切换了 6381 端口\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"127.0\")]),s._v(\".0.1:2637\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[s._v(\"9\")]),s._v(\">\")]),s._v(\" info Sentinel\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# Sentinel\")]),s._v(\"\\nsentinel_masters:1\\nsentinel_tilt:0\\nsentinel_running_scripts:0\\nsentinel_scripts_queue_length:0\\nsentinel_simulate_failure_flags:0\\nmaster0:name\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\"mymaster,status\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\"ok,address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"127.0\")]),s._v(\".0.1:6381,slaves\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\",sentinels\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\"\\n\")])])]),e(\"p\",[s._v(\"但同时还可以发现，\"),e(\"strong\",[s._v(\"哨兵节点认为新的主节点仍然有两个从节点\")]),s._v(\" \"),e(\"em\",[s._v(\"(上方 slaves=2)\")]),s._v(\"，这是因为哨兵在将 \"),e(\"code\",[s._v(\"6381\")]),s._v(\" 切换成主节点的同时，将 \"),e(\"code\",[s._v(\"6379\")]),s._v(\" 节点置为其从节点。虽然 \"),e(\"code\",[s._v(\"6379\")]),s._v(\" 从节点已经挂掉，但是由于 \"),e(\"strong\",[s._v(\"哨兵并不会对从节点进行客观下线\")]),s._v(\"，因此认为该从节点一直存在。当 \"),e(\"code\",[s._v(\"6379\")]),s._v(\" 节点重新启动后，会自动变成 \"),e(\"code\",[s._v(\"6381\")]),s._v(\" 节点的从节点。\")]),s._v(\" \"),e(\"p\",[s._v(\"另外，在故障转移的阶段，哨兵和主从节点的配置文件都会被改写：\")]),s._v(\" \"),e(\"ul\",[e(\"li\",[e(\"strong\",[s._v(\"对于主从节点：\")]),s._v(\" 主要是 \"),e(\"code\",[s._v(\"slaveof\")]),s._v(\" 配置的变化，新的主节点没有了 \"),e(\"code\",[s._v(\"slaveof\")]),s._v(\" 配置，其从节点则 \"),e(\"code\",[s._v(\"slaveof\")]),s._v(\" 新的主节点。\")]),s._v(\" \"),e(\"li\",[e(\"strong\",[s._v(\"对于哨兵节点：\")]),s._v(\" 除了主从节点信息的变化，纪元(epoch) \"),e(\"em\",[s._v(\"(记录当前集群状态的参数)\")]),s._v(\" 也会变化，纪元相关的参数都 +1 了。\")])]),s._v(\" \"),e(\"h3\",{attrs:{id:\"客户端访问哨兵系统代码演示\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#客户端访问哨兵系统代码演示\"}},[s._v(\"#\")]),s._v(\" 客户端访问哨兵系统代码演示\")]),s._v(\" \"),e(\"p\",[s._v(\"上面我们在 \"),e(\"em\",[s._v(\"快速体验\")]),s._v(\" 中主要感受到了服务端自己对于当前主从节点的自动化治理，下面我们以 Java 代码为例，来演示一下客户端如何访问我们的哨兵系统：\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-java extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"static\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"testSentinel\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"throws\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Exception\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n         \"),e(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" masterName \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"mymaster\"')]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n         \"),e(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Set\")]),e(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),e(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\" sentinels \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"HashSet\")]),e(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n         sentinels\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"add\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"127.0.0.1:26379\"')]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n         sentinels\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"add\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"127.0.0.1:26380\"')]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n         sentinels\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"add\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"127.0.0.1:26381\"')]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\\n         \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 初始化过程做了很多工作\")]),s._v(\"\\n         \"),e(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"JedisSentinelPool\")]),s._v(\" pool \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"JedisSentinelPool\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"masterName\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" sentinels\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \\n         \"),e(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Jedis\")]),s._v(\" jedis \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" pool\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getResource\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n         jedis\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"set\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"key1\"')]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"value1\"')]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n         pool\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"close\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])]),e(\"h4\",{attrs:{id:\"客户端原理\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#客户端原理\"}},[s._v(\"#\")]),s._v(\" 客户端原理\")]),s._v(\" \"),e(\"p\",[s._v(\"Jedis 客户端对哨兵提供了很好的支持。如上述代码所示，我们只需要向 Jedis 提供哨兵节点集合和 \"),e(\"code\",[s._v(\"masterName\")]),s._v(\" ，构造 \"),e(\"code\",[s._v(\"JedisSentinelPool\")]),s._v(\" 对象，然后便可以像使用普通 Redis 连接池一样来使用了：通过 \"),e(\"code\",[s._v(\"pool.getResource()\")]),s._v(\" 获取连接，执行具体的命令。\")]),s._v(\" \"),e(\"p\",[s._v(\"在整个过程中，我们的代码不需要显式的指定主节点的地址，就可以连接到主节点；代码中对故障转移没有任何体现，就可以在哨兵完成故障转移后自动的切换主节点。之所以可以做到这一点，是因为在 \"),e(\"code\",[s._v(\"JedisSentinelPool\")]),s._v(\" 的构造器中，进行了相关的工作；主要包括以下两点：\")]),s._v(\" \"),e(\"ol\",[e(\"li\",[e(\"strong\",[s._v(\"遍历哨兵节点，获取主节点信息：\")]),s._v(\" 遍历哨兵节点，通过其中一个哨兵节点 + \"),e(\"code\",[s._v(\"masterName\")]),s._v(\" 获得主节点的信息；该功能是通过调用哨兵节点的 \"),e(\"code\",[s._v(\"sentinel get-master-addr-by-name\")]),s._v(\" 命令实现；\")]),s._v(\" \"),e(\"li\",[e(\"strong\",[s._v(\"增加对哨兵的监听：\")]),s._v(\" 这样当发生故障转移时，客户端便可以收到哨兵的通知，从而完成主节点的切换。具体做法是：利用 Redis 提供的 \"),e(\"strong\",[s._v(\"发布订阅\")]),s._v(\" 功能，为每一个哨兵节点开启一个单独的线程，订阅哨兵节点的 + switch-master 频道，当收到消息时，重新初始化连接池。\")])]),s._v(\" \"),e(\"h3\",{attrs:{id:\"新的主服务器是怎样被挑选出来的\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#新的主服务器是怎样被挑选出来的\"}},[s._v(\"#\")]),s._v(\" 新的主服务器是怎样被挑选出来的？\")]),s._v(\" \"),e(\"p\",[e(\"strong\",[s._v(\"故障转移操作的第一步\")]),s._v(\" 要做的就是在已下线主服务器属下的所有从服务器中，挑选出一个状态良好、数据完整的从服务器，然后向这个从服务器发送 \"),e(\"code\",[s._v(\"slaveof no one\")]),s._v(\" 命令，将这个从服务器转换为主服务器。但是这个从服务器是怎么样被挑选出来的呢？\")]),s._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/wmyskxz/img/img/Redis%EF%BC%889%EF%BC%89%E2%80%94%E2%80%94%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%BC%BA%E3%80%90%E9%9B%86%E7%BE%A4%E3%80%91%E5%85%A5%E9%97%A8%E5%AE%9E%E8%B7%B5%E6%95%99%E7%A8%8B/7896890-02dfea57f44fc27e.png\",alt:\"\"}})]),s._v(\" \"),e(\"p\",[s._v(\"简单来说 Sentinel 使用以下规则来选择新的主服务器：\")]),s._v(\" \"),e(\"ol\",[e(\"li\",[s._v(\"在失效主服务器属下的从服务器当中， 那些被标记为主观下线、已断线、或者最后一次回复 PING 命令的时间大于五秒钟的从服务器都会被 \"),e(\"strong\",[s._v(\"淘汰\")]),s._v(\"。\")]),s._v(\" \"),e(\"li\",[s._v(\"在失效主服务器属下的从服务器当中， 那些与失效主服务器连接断开的时长超过 down-after 选项指定的时长十倍的从服务器都会被 \"),e(\"strong\",[s._v(\"淘汰\")]),s._v(\"。\")]),s._v(\" \"),e(\"li\",[s._v(\"在 \"),e(\"strong\",[s._v(\"经历了以上两轮淘汰之后\")]),s._v(\" 剩下来的从服务器中， 我们选出 \"),e(\"strong\",[s._v(\"复制偏移量（replication offset）最大\")]),s._v(\" 的那个 \"),e(\"strong\",[s._v(\"从服务器\")]),s._v(\" 作为新的主服务器；如果复制偏移量不可用，或者从服务器的复制偏移量相同，那么 \"),e(\"strong\",[s._v(\"带有最小运行 ID\")]),s._v(\" 的那个从服务器成为新的主服务器。\")])])])}),[],!1,null,null,null);t.default=n.exports}}]);","extractedComments":[]}